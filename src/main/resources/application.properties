spring.application.name=userservice

spring.application.port=8080
server.port=${spring.application.port}

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/capstoneuserservice
spring.datasource.username=capstoneuserservice
#spring.datasource.password=secret
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql= true

logging.level.org.springframework.security = trace


######################## KAFKA PRODUCER CONFIGURATION ########################
# Producer + Admin profile
#spring.config.activate.on-profile=producer # Needed only if you use multiple profiles in same application/microservice

# ------------------------
# Bootstrap servers
# ------------------------
# Use the port your Docker container exposes. The screenshot shows both 9092 and 29092.
spring.kafka.bootstrap-servers=localhost:9092
# Alternative (uncomment if you need the external listener):
# spring.kafka.bootstrap-servers=localhost:29092

# ------------------------
# Admin (KafkaAdmin)
# ------------------------
# Allow KafkaAdmin to create topics programmatically
spring.kafka.admin.auto-create=true
# Pass through bootstrap servers to admin properties too
spring.kafka.admin.properties.bootstrap.servers=${spring.kafka.bootstrap-servers}

# ------------------------
# Producer settings
# ------------------------
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Reliability & throughput tuning (recommended for dev/local; tune for prod)
spring.kafka.producer.acks=all
# Integer.MAX_VALUE - long retry strategy
spring.kafka.producer.retries=2147483647      
spring.kafka.producer.enable-idempotence=true
spring.kafka.producer.max-in-flight-requests-per-connection=5
spring.kafka.producer.linger-ms=5
#32 KB batch size
spring.kafka.producer.batch-size=32768
spring.kafka.producer.compression-type=lz4

# Optional - enable transactions if you will use executeInTransaction
# spring.kafka.producer.transaction-id-prefix=tx-

# ------------------------
# Optional common Kafka client timeouts
# ------------------------
spring.kafka.producer.request-timeout-ms=30000
spring.kafka.producer.delivery-timeout-ms=120000


# ------------------------
# Store topic names in Spring @ConfigurationProperties
# ------------------------
app.kafka.topics.email-events.name=email-topic
#app.kafka.topics.email-events.partitions=1
#app.kafka.topics.email-events.replicas=1

app.kafka.topics.audit-log.name=audit-log
#app.kafka.topics.audit-log.partitions=1
#app.kafka.topics.audit-log.replicas=1